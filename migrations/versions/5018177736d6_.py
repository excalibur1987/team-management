"""empty message

Revision ID: 5018177736d6
Revises: 0ffd29cae080
Create Date: 2021-05-31 13:56:23.029029

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "5018177736d6"
down_revision = "0ffd29cae080"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organizations",
        sa.Column("id", sa.INTEGER(), nullable=False, comment="Unique row identifier"),
        sa.Column(
            "name", sa.String(), nullable=False, comment="Unique name of Organization"
        ),
        sa.Column(
            "description",
            sa.String(),
            nullable=True,
            comment="Short description of organization",
        ),
        sa.Column("addr_line1", sa.String(), nullable=False, comment="Address line 1"),
        sa.Column("addr_line2", sa.String(), nullable=True, comment="Address line 1"),
        sa.Column("country", sa.String(), nullable=False, comment="Country's ISO code"),
        sa.Column("city", sa.String(), nullable=False, comment="City's name"),
        sa.Column("contact_email", sa.String(), nullable=False),
        sa.Column("contact_phone", sa.String(), nullable=False),
        sa.Column("contact_user_id", sa.Integer(), nullable=False),
        sa.Column(
            "slug",
            sa.String(),
            nullable=False,
            comment="identifier slug for organization",
        ),
        sa.Column(
            "date_added",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="row timestamp",
        ),
        sa.Column(
            "date_updated",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="timestamp for last updated",
        ),
        sa.Column("added_by_id", sa.INTEGER(), nullable=True),
        sa.Column(
            "updated_by_id", sa.INTEGER(), nullable=True, comment="fk for user's table"
        ),
        sa.ForeignKeyConstraint(
            ["added_by_id"],
            ["users.id"],
            name=op.f("fk_organizations_added_by_id_users"),
        ),
        sa.ForeignKeyConstraint(
            ["contact_user_id"],
            ["users.id"],
            name=op.f("fk_organizations_contact_user_id_users"),
        ),
        sa.ForeignKeyConstraint(
            ["updated_by_id"],
            ["users.id"],
            name=op.f("fk_organizations_updated_by_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_organizations")),
        sa.UniqueConstraint("name", name=op.f("uq_organizations_name")),
        sa.UniqueConstraint("slug", name=op.f("uq_organizations_slug")),
    )
    op.create_table(
        "organization_departments",
        sa.Column("id", sa.INTEGER(), nullable=False, comment="Unique row identifier"),
        sa.Column("org_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=False, comment="department's name"),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
            name=op.f("fk_organization_departments_org_id_organizations"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_organization_departments")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("organization_departments")
    op.drop_table("organizations")
    # ### end Alembic commands ###
