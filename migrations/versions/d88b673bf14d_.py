"""empty message

Revision ID: d88b673bf14d
Revises: 6ac9bc99bcb1
Create Date: 2021-05-25 15:14:29.366733

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "d88b673bf14d"
down_revision = "6ac9bc99bcb1"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "entities",
        sa.Column("id", sa.INTEGER(), nullable=False, comment="Unique row identifier"),
        sa.Column("name", sa.String(), nullable=False, comment="entity name"),
        sa.Column(
            "description",
            sa.String(),
            server_default="",
            nullable=False,
            comment="short discription of the entity",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_entities")),
        sa.UniqueConstraint("name", name=op.f("uq_entities_name")),
    )
    op.create_table(
        "role_entity_permissions",
        sa.Column("id", sa.INTEGER(), nullable=False, comment="Unique row identifier"),
        sa.Column(
            "entity_id",
            sa.INTEGER(),
            nullable=False,
            comment="entity's table foreign key",
        ),
        sa.Column(
            "role_id", sa.INTEGER(), nullable=False, comment="role's table foreign key"
        ),
        sa.Column(
            "can_create",
            sa.BOOLEAN(),
            server_default=sa.text("CAST(false AS BOOLEAN)"),
            nullable=False,
            comment="can create flag",
        ),
        sa.Column(
            "can_edit",
            sa.BOOLEAN(),
            server_default=sa.text("CAST(false AS BOOLEAN)"),
            nullable=False,
            comment="can edit flag",
        ),
        sa.ForeignKeyConstraint(
            ["entity_id"],
            ["entities.id"],
            name=op.f("fk_role_entity_permissions_entity_id_entities"),
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
            name=op.f("fk_role_entity_permissions_role_id_roles"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_role_entity_permissions")),
    )
    op.create_table(
        "user_entity_permissions",
        sa.Column("id", sa.INTEGER(), nullable=False, comment="Unique row identifier"),
        sa.Column(
            "entity_id",
            sa.INTEGER(),
            nullable=False,
            comment="entity's table foreign key",
        ),
        sa.Column(
            "user_id", sa.INTEGER(), nullable=False, comment="user's table foreign key"
        ),
        sa.Column(
            "can_create",
            sa.BOOLEAN(),
            server_default=sa.text("CAST(false AS BOOLEAN)"),
            nullable=False,
            comment="can create flag",
        ),
        sa.Column(
            "can_edit",
            sa.BOOLEAN(),
            server_default=sa.text("CAST(false AS BOOLEAN)"),
            nullable=False,
            comment="can edit flag",
        ),
        sa.ForeignKeyConstraint(
            ["entity_id"],
            ["entities.id"],
            name=op.f("fk_user_entity_permissions_entity_id_entities"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_user_entity_permissions_user_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_entity_permissions")),
    )
    op.alter_column(
        "roles",
        "name",
        existing_type=sa.VARCHAR(),
        comment="role name",
        existing_nullable=False,
    )
    op.alter_column(
        "roles",
        "description",
        existing_type=sa.VARCHAR(),
        comment="short discription of the role",
        existing_nullable=False,
        existing_server_default=sa.text("''::character varying"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "roles",
        "description",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="short discription of the role",
        existing_nullable=False,
        existing_server_default=sa.text("''::character varying"),
    )
    op.alter_column(
        "roles",
        "name",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="role name",
        existing_nullable=False,
    )
    op.drop_table("user_entity_permissions")
    op.drop_table("role_entity_permissions")
    op.drop_table("entities")
    # ### end Alembic commands ###
